#################################################
# Initialize the system:
#################################################
units real
atom_style full
boundary p p p

#################################################
# Read liquid and solid files and define groups:
#################################################
read_data lj-polymer-1.data extra/atom/types 1 group LJFLUID
read_data solid-walls-replicated.data add append offset 1 0 0 0 0 group SOLID

# Define regions and groups to split the SOLID into two groups
variable zmid equal (zhi-zlo)/2

region lower_wall_region block -1 EDGE -1 EDGE -1 ${zmid}
group lower_wall_group region lower_wall_region
group LOWER_SOLID intersect lower_wall_group SOLID

region upper_wall_region block -1 EDGE -1 EDGE ${zmid} EDGE
group upper_wall_group region upper_wall_region
group UPPER_SOLID intersect upper_wall_group SOLID

#################################################
# Define relevant variables:
#################################################

variable mass_fluid equal 16
variable mass_solid equal 12.0107
variable sigma_FF equal 3.15
variable sigma_FS equal 3.15
variable epsilon_FF	equal 0.15
variable epsilon_FS equal 0.09
variable mehul equal mehul_valpy

variable T equal 20
variable Tthermostat equal ${T}*0.98
variable dens equal 0.9
variable tstep equal 2
variable cutoff_radius equal 10

variable bond_constant equal 1000
variable bond_length equal 3.15
variable angle_constant equal 50
variable bond_angle equal 109.5
variable dihedral_coeff_k equal -2.8
variable dihedral_coeff_n equal 1
variable dihedral_coeff_d equal -7
variable thermonum equal 1000
variable num_bins equal 30
variable bin_width equal (zhi-zlo)/${num_bins}

variable hundredthousandtimeshalfshear equal 5 # This makes it in m/s
variable halfshear equal ${hundredthousandtimeshalfshear}*1e-5 # Real units


#################################################
# Define interactions, bonds, dihedrals:
#################################################

# For non-bonded species
pair_style lj/cut ${cutoff_radius}
pair_coeff 1 1 ${epsilon_FF} ${sigma_FF}
pair_coeff 1 2 ${epsilon_FS} ${sigma_FS}
pair_coeff 2 2 0 0

# For bonds, angles and dihedrals
bond_style harmonic
bond_coeff 1 ${bond_constant} ${bond_length}
angle_style harmonic
angle_coeff 1 ${angle_constant} ${bond_angle}
dihedral_style charmm
dihedral_coeff 1 ${dihedral_coeff_k} ${dihedral_coeff_n} ${dihedral_coeff_d} 0.0

#######################################################
# Define computes, thermo_style, timestep and create velocity:
#######################################################

# Compute thermodynamic quantities and bonds. Define thermo_style
compute tempLJ LJFLUID temp
compute binvel all chunk/atom bin/1d z lower ${bin_width} nchunk once
compute bondinfo all property/local batom1 batom2 btype
thermo ${thermonum}
thermo_style custom step c_tempLJ pe ke etotal press

velocity LJFLUID create ${T} 123456 rot yes dist gaussian
timestep 5

#######################################################
# Relax the system using nve/limit:
#######################################################
fix relax_fluid LJFLUID nve/limit 0.05
run 1000

unfix relax_fluid

#######################################################
# Steady state for temperature:
#######################################################
fix temp_steady_state LJFLUID nvt temp ${T} ${T} 500
run 1000

unfix temp_steady_state

#######################################################
# Steady state for solid walls:
#######################################################
fix temp_steady_state LJFLUID nvt temp ${T} ${T} 1000
fix upperwall_fix UPPER_SOLID move linear -${halfshear} 0 0
fix lowerwall_fix LOWER_SOLID move linear ${halfshear} 0 0

run 500000

unfix temp_steady_state

#######################################################
# Final run and gather data:
#######################################################
timestep ${tstep}
fix temp_data_run LJFLUID langevin ${Tthermostat} ${Tthermostat} 15000 123456
fix nve_data_run LJFLUID nve
fix binvelocity_data all ave/chunk 1 binvelavg_defvalpy binvelavg_defvalpy binvel vx file VelProfile_${hundredthousandtimeshalfshear}_${dens}_${T}K.txt


fix thermo_data all print 1000 "$(step) $(c_tempLJ) $(pe) $(ke) $(etotal) $(press)" file slipeq_run.txt screen no title "Time-step Temperature PE KE TE Pressure"

dump trajectory_file all atom trajectory_times_defvalpy LJLAYERS_${dens}_${epsilon_FF}_${T}K.lammpstrj
dump bonds_data all local trajectory_times_defvalpy bond_information.lammpstrj c_bondinfo[1] c_bondinfo[2] c_bondinfo[3]


run 500000

write_restart slipeq_restart_file.txt